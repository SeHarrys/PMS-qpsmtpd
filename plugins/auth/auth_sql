#!/usr/bin/perl -w

use DBIx::Custom;
use Qpsmtpd::Constants;
use Digest::HMAC_MD5 qw(hmac_md5_hex);

sub register {
    my ( $self, $qp ) = @_;

    $self->register_hook("auth-plain", "authsql" );
    $self->register_hook("auth-login", "authsql" );
    $self->register_hook("auth-cram-md5", "authsql");

    $self->{_db} = DBIx::Custom->connect(
	dsn => "dbi:mysql:database=pms:127.0.0.1",
	user => 'pms',
	password => '',
	connector => 1,
	);
}

sub authsql {
    my ( $self, $transaction, $method, $user, $passClear, $passHash, $ticket ) = @_;
    my ( $pw_name, $pw_domain ) = split "@", lc($user);

    return DECLINED unless defined $pw_domain;

    #$self->log(LOGINFO,"Auth attemp : $pw_name\@$pw_domain");

    my $Control = $self->{_db}->execute('SELECT * FROM control where pw_name = :user and pw_domain = :domain', { user => $pw_name , domain => $pw_domain } )->fetch_hash;

    my $pw_clear_passwd = $Control->{pw_clear_passwd} ;
    my $pw_passwd = $Control->{pw_passwd}; # this is always present
    
    if ( # clear_passwd isn't defined so we cannot support CRAM-MD5
         ( $method =~ /CRAM-MD5/i and not defined $pw_clear_passwd )
	 or
         # user doesn't exist in this domain
	 ( not defined $pw_passwd )
       ) {
        return ( DECLINED, "authsql/$method" );
    }

    # at this point we can assume the user name matched
    if (
        ( defined $passClear and 
	  (
	     ($pw_clear_passwd eq $passClear)
	  or ($pw_passwd eq crypt( $passClear, $pw_passwd ) )
	  )
	) 
        or ( defined $passHash
             and $passHash eq hmac_md5_hex( $ticket, $pw_clear_passwd ) )
      )
    {
        return ( OK, "authsql/$method" );
    }
    else {
        return ( DENY, "authsql/$method - wrong password" );
    }
}

